version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: gastrobot-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: gastrobot
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - gastrobot-network

  # Backend API
  backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    container_name: gastrobot-backend
    restart: unless-stopped
    environment:
      PORT: 5000
      NODE_ENV: production
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/gastrobot?authSource=admin
      JWT_SECRET: gastrobot_secret_key_2024
      FRONTEND_URL: http://localhost:3000
      SENDGRID_API_KEY: ${SENDGRID_API_KEY:-}
      RESEND_API_KEY: re_Sg7PZfac_FvCFLYsk93MVP2a3uV3MjVwR
      GMAIL_USER: perezespinosafacundo@gmail.com
      GMAIL_APP_PASSWORD: ldrg frlz lxid acpz
      AI_API_KEY: sk-z7NSVDja8nDQgcW7A51cE6549d574008Bd95617cAc89746b
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    networks:
      - gastrobot-network
    volumes:
      - ./uploads:/app/uploads

  # Frontend React App
  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
    container_name: gastrobot-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:5000
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - gastrobot-network

volumes:
  mongodb_data:
    driver: local

networks:
  gastrobot-network:
    driver: bridge 